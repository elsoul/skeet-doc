[
  {
    "input": "Skeetチュートリアルを開始する前に何を準備すべきですか？",
    "output": "Skeetチュートリアルを開始する前に、ロードバランサーに設定するドメインとGitHubアカウントを準備する必要があります。ドメインはネームサーバーを変更できるものを用意してください。また、GitHubアカウントはログイン認証を済ませておく必要があります。これは、skeet initコマンドでGitHubリポジトリが作成され、GitHub Actionsによるデプロイが設定されるためです。"
  },
  {
    "input": "GitHub CLIにログインするにはどうすればいいですか？",
    "output": "GitHub CLIにログインするには、ターミナルで$ gh auth loginコマンドを実行します。その後、指示に従ってログインを完了します。"
  },
  {
    "input": "本番環境でHTTPインスタンスのオプションをどのように更新すればよいですか？",
    "output": "本番環境では、プライベートなネットワーク環境でロードバランサーからアクセスできるようにするために、HTTPインスタンスのオプションをpublicHttpOptionからprivateHttpOptionに変更します。具体的には、createStreamChatMessage関数とauthOnCreateUser関数のオプションを変更します。"
  },
  {
    "input": "フロントエンドへ公開するインスタンスの関数のオプションはどのように変更すればよいですか？",
    "output": "フロントエンドへ公開するインスタンスの関数のオプションも同様に変更する必要があります。具体的な変更方法はドキュメントには記載されていませんが、おそらく同様にpublicオプションからprivateオプションに変更することでしょう。"
  },
  {
    "input": "Skeet initコマンドは何を行うのですか？",
    "output": "Skeet initコマンドは、Skeetアプリケーションの初期設定を行います。具体的には、Google CloudプロジェクトIDとFirebaseプロジェクトIDの選択、リージョンの選択、Firebaseへのログイン、GitHubリポジトリ名の指定、Google Cloud SQLのパスワード設定、ネームサーバーのドメイン設定、ロードバランサーのサブドメイン設定などを行います。"
  },
  {
    "input": "Skeet initコマンドを実行すると何が起こりますか？",
    "output": "Skeet initコマンドを実行すると、GitHubリポジトリの作成、GitHubリポジトリへのコミット・プッシュ、GitHubリポジトリのActionsとSecretsの設定、Google Cloud IAM、DNS、SQL、Load Balancer、Armor、VPC Network、VPC Subnet Network、VPC Connectorの設定などが自動で行われます。"
  },
  {
    "input": "Skeet initコマンドの実行後、何をすればいいですか？",
    "output": "Skeet initコマンドの実行が完了すると、コンソールログにネームサーバーのドメイン設定が表示されます。これらのアドレスをDNS設定にコピー＆ペーストしてください。DNS設定後、約1時間でhttpsが利用可能になります。"
  },
  {
    "input": "ネームサーバーの設定はどのように行いますか？",
    "output": "ネームサーバーの設定は、指示に従って表示された4つのレコードをドメインのネームサーバーに設定します。設定が完了したら、30分から2時間程度でドメインの設定が反映されます。ただし、この時間はネームサーバーの設定により異なることがあります。"
  },
  {
    "input": "デプロイが成功したかどうかはどのように確認しますか？",
    "output": "デプロイが成功したかどうかは、https://lb.your-domain.com/root にアクセスして確認できます。以下のようなメッセージが表示されれば、デプロイは成功しています：\n\n{\n  \"status\": \"success\",\n  \"message\": \"Skeet Backend is running!\",\n  \"body\": {}\n}"
  },
  {
    "input": "エンドポイントを追加した後、何をする必要がありますか？",
    "output": "エンドポイントを追加した後、デプロイ後にルーティングの同期を行う必要があります。これにより、ロードバランサーの設定が更新されます。同期は $ skeet sync routings コマンドを実行することで行えます。"
  },
  {
    "input": "$ skeet sync routings コマンドは何を行うのですか？",
    "output": "$ skeet sync routings コマンドは、ネットワークエンドポイントグループの作成、バックエンドサービスの作成、バックエンドサービスの追加、セキュリティーポリシーの適用、URLマップの作成などを自動で行います。これにより、新たに追加されたエンドポイントが正しくルーティングされるようになります。"
  },
  {
    "input": "Cloud Armorの設定を同期するにはどうすればいいですか？",
    "output": "Cloud Armorの設定を同期するには、まずskeet-cloud.config.jsonファイルにCloud Armorの設定を記述します。デフォルトの設定では、現在接続しているグローバルIPのみ通信を許可していますが、必要に応じて変更できます。設定を記述した後、$ skeet sync armorsコマンドを実行することで、新規にGoogle Cloud Armorを作成したり、既存の設定を更新したりできます。"
  },
  {
    "input": "skeet-cloud.config.jsonファイルにはどのような情報を記述する必要がありますか？",
    "output": "skeet-cloud.config.jsonファイルには、アプリの名前、プロジェクトID、リージョン、ドメイン、Cloud Runの設定、データベースの設定、そしてCloud Armorの設定を記述します。Cloud Armorの設定では、セキュリティポリシーの名前と、それに関連するルールを定義します。ルールには、優先度、説明、オプション（ソースIP範囲、アクション、表現など）を設定します。"
  }
]